<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>图床搭建</title>
    <link href="/2024/07/14/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/07/14/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>github图床搭建并且配合Typora上传图片(踩过的坑我会重点标注，唉)—这里引用了网上其他人的博客哦</p><h3 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1.新建仓库"></a>1.新建仓库</h3><p>点击+号-&gt;New repository-&gt;填写相关信息-&gt;Create repository</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714130337695.png"></p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714130514341.png" alt="image-20240714130514341"></p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714130556831.png" alt="image-20240714130556831"></p><h3 id="2-生成Token令牌"><a href="#2-生成Token令牌" class="headerlink" title="2.生成Token令牌"></a>2.生成Token令牌</h3><p>点击右上角头像-&gt;Settings-&gt;下拉，直到左侧到底，选择Developer settings（开发人员设置）-&gt;Personal Access tokens（个人访问令牌） -&gt; Tkens(classic) -&gt; Generate New Token(classic， 一定要选择 classic 方式)-&gt; 配置相关信息 -&gt; Generate token<br>Token令牌用于个人身份验证，不需要密码也可以直接访问你的仓库内容</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/e21d7505be4b458da6227d25794a8464.png" alt="img"></p><p>在创建页面中，填写 Note 为“图床”，Expiration（过期时间）为 No expiration（永久）,也可以自定义过期时间，在下面的Select scopes（选择权限范围）如下图勾选 repo。最后点击 generate token 生成令牌即可。</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/98086eaeb6b346bf9e018f9c5d9426ec.png" alt="在这里插入图片描述"></p><p><strong>务必将令牌保存起来</strong>，放在一个安全的地方，页面关掉后就看不到了。</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/974f38f035c6415eb41453960572b654.png" alt="在这里插入图片描述"></p><h3 id="3-创建img分支和该分支下的img文件夹-可选"><a href="#3-创建img分支和该分支下的img文件夹-可选" class="headerlink" title="3.创建img分支和该分支下的img文件夹(可选)"></a>3.创建img分支和该分支下的img文件夹(可选)</h3><p>创建img分支</p><p>点击自己的仓库-&gt;main-&gt;View all branches-&gt;New branch-&gt;分支名-&gt;Create new branch</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/2a6e9a8a13fb4097aa4295c52c28d63c.png" alt="在这里插入图片描述"></p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/10143689bfcf44688fb7bb7f0126a71c.png" alt="在这里插入图片描述"></p><p>创建img文件夹</p><p>Add file -&gt; Create new file -&gt; 填写 img&#x2F;test -&gt; Commit changes</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/5cbd2e89ce62454b9a202aa9e71c69d4.png" alt="在这里插入图片描述"></p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/68b3e14ebb1d4f5387b80653608a679f.png" alt="在这里插入图片描述"></p><h3 id="4-下载一个软件PicGo"><a href="#4-下载一个软件PicGo" class="headerlink" title="4.下载一个软件PicGo"></a>4.下载一个软件PicGo</h3><p>PicGo是一个用于上传图片的客户端，支持拖拽上传、剪贴板上传，功能十分方便</p><p>我自己找的是一个百度网盘的下载<a href="https://pan.baidu.com/s/1kgt2M2Hx90uodt_Bj4nTkg?pwd=b0ko#list/path=%2F">https://pan.baidu.com/s/1kgt2M2Hx90uodt_Bj4nTkg?pwd=b0ko#list/path=%2F</a> 提取码：b0ko  下载好之后图标就是这样的<img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714131610849.png" alt="image-20240714131610849"></p><p>纯发牢骚QAQ（下载好之后肯定要打开这个软件是吧！我嘞个豆啊，我就正常把鼠标光标放到图标上双击打开，打开了五六次啊，没出现界面啊，没出现这个界面啊!<img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714131908800.png" alt="image-20240714131908800"></p><p>我一度怀疑是我下载错软件了，删了又下下了又删。这个过程至少有5遍啊，我打开任务管理器看看，Picgo在运行啊，但是我找不到啊…又去网上搜为啥，OK问题找到了</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714132227827.png" alt="image-20240714132227827"></p><p>那个小箭头打开一下，然后点击图标即可打开！！！</p><h3 id="5-然后开始配置"><a href="#5-然后开始配置" class="headerlink" title="5.然后开始配置"></a>5.然后开始配置</h3><p>打开PicGo，右边有个 图床设置 然后打开它 点击GitHub图床</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714132538560.png" alt="image-20240714132538560"></p><p>第一行设定仓库名 ：一定要是自己的用户名斜杠仓库名    （用户名&#x2F;仓库名），脑袋灵活一点</p><p>第二行设定分支名：我自己的是main，不知道你的是啥，你自己看着填</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714133009486.png" alt="image-20240714133009486"></p><p>第三行设定Token值：就是上面有个步骤让你保存的那个Token值，直接复制粘贴上去就好了</p><p>第四行：如果你按照我上面的步骤来的话，你就填img&#x2F;</p><p>第五行:你就别填了，不要问为啥，我踩过坑，填了就无法上传图片了，实在想知道，你去搜一下，然会再来教我OK吧？</p><h3 id="6-然后就上传图片呗"><a href="#6-然后就上传图片呗" class="headerlink" title="6.然后就上传图片呗"></a>6.然后就上传图片呗</h3><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714133619237.png" alt="image-20240714133619237"></p><p>然后自己到相册里面可以看到</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714133705593.png" alt="image-20240714133705593"></p><p>上传完成会在相册中查看到或者直接在GitHub仓库中查看</p><h3 id="7-Typora实现自动上传（正版的要钱，自己去搞一个破解版-）"><a href="#7-Typora实现自动上传（正版的要钱，自己去搞一个破解版-）" class="headerlink" title="7. Typora实现自动上传（正版的要钱，自己去搞一个破解版~）"></a>7. Typora实现自动上传（正版的要钱，自己去搞一个破解版~）</h3><p>Typora通过PicGo软件自动上传图片到GitHub仓库中。</p><p>文件 -&gt;偏好设置 -&gt; 图像 -&gt; 上传图片 -&gt; 配置PicGo路径</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/478d72e202d04cbeb8d82be19fbeb291.png" alt="在这里插入图片描述"></p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714133921444.png" alt="image-20240714133921444"></p><p>最右下角第二行那个PicGo路径那里 记得设置到自己下载安装PicGo那个路径</p><h4 id="这些东西搞好之后再在Typora上写博客放图片的时候超级方便，你图片直接可以粘贴到这边，网上的免费图床挺麻烦的，可以自己建一个。你按照我上面的步骤一步一步来的话，因该不会有问题的！唉，自己搞真的踩了好多坑，但是学习也是一个探索的过程吧，就这样了-ORZ"><a href="#这些东西搞好之后再在Typora上写博客放图片的时候超级方便，你图片直接可以粘贴到这边，网上的免费图床挺麻烦的，可以自己建一个。你按照我上面的步骤一步一步来的话，因该不会有问题的！唉，自己搞真的踩了好多坑，但是学习也是一个探索的过程吧，就这样了-ORZ" class="headerlink" title="这些东西搞好之后再在Typora上写博客放图片的时候超级方便，你图片直接可以粘贴到这边，网上的免费图床挺麻烦的，可以自己建一个。你按照我上面的步骤一步一步来的话，因该不会有问题的！唉，自己搞真的踩了好多坑，但是学习也是一个探索的过程吧，就这样了    ORZ"></a>这些东西搞好之后再在Typora上写博客放图片的时候超级方便，你图片直接可以粘贴到这边，网上的免费图床挺麻烦的，可以自己建一个。你按照我上面的步骤一步一步来的话，因该不会有问题的！唉，自己搞真的踩了好多坑，但是学习也是一个探索的过程吧，就这样了    ORZ</h4>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>docker studys</title>
    <link href="/2024/07/12/docker%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/07/12/docker%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="基于阿里云服务器CentOS-操作系统-linux操作系统"><a href="#基于阿里云服务器CentOS-操作系统-linux操作系统" class="headerlink" title="基于阿里云服务器CentOS 操作系统,linux操作系统"></a>基于阿里云服务器CentOS 操作系统,linux操作系统</h3><p>首先Xshell连接一下服务器，这里我就不演示了</p><h4 id="安装docker指令"><a href="#安装docker指令" class="headerlink" title="安装docker指令"></a>安装docker指令</h4><p>1.yum 包更新到最新</p><p>yum update</p><p>2.安装需要的软件包</p><p>yum install -y yum-utils device-mapper-persistent-data lvm2</p><p>3.设置yum源</p><p>yum-config-manager –add-repo <a href="https://download.docker.com/linux/centos/docker-ce.repo">https://download.docker.com/linux/centos/docker-ce.repo</a></p><p>4.安装docker,出现输入的界面都按y</p><p>yum install -y docker-ce</p><p>5.查看docker的版本，并且检查更新</p><p>docker -v</p><h3 id="docker架构"><a href="#docker架构" class="headerlink" title="docker架构"></a>docker架构</h3><p><a href="https://pic.imgdb.cn/item/6691297ad9c307b7e9ccb6d8.pngsss">https://pic.imgdb.cn/item/6691297ad9c307b7e9ccb6d8.pngsss</a></p><p>docker的镜像加速器，每个人都有独特地址，自己阿里云服务器上去找</p><h3 id="docker服务相关命令"><a href="#docker服务相关命令" class="headerlink" title="docker服务相关命令"></a>docker服务相关命令</h3><p>1.启动docker服务</p><p>systemctl start docker</p><p>2.停止</p><p>systemctl stop docker</p><p>3.重启</p><p>systemctl restart docker</p><p>4.查看状态</p><p>systemctl status docker</p><p>5.开机自启</p><p>systemctl enable docker</p><h3 id="docker镜像相关命令"><a href="#docker镜像相关命令" class="headerlink" title="docker镜像相关命令"></a>docker镜像相关命令</h3><p>1.查看镜像</p><p>docker images</p><p>2.搜索</p><p>docker search …(…替换到你需要下载的镜像）</p><p>3.拉取</p><p>docker pull …(…替换你的镜像)</p><p>4.删除</p><p>docker rmi …(…替换镜像ID)</p><h3 id="docker容器相关命令"><a href="#docker容器相关命令" class="headerlink" title="docker容器相关命令"></a>docker容器相关命令</h3><p>1.查看容器</p><p> docker ps -a</p><p>2.创建</p><p>docker run -it –name&#x3D;（名字）根据镜像名称：版本</p><p>docker run -it –name&#x3D;c1 centos:7 &#x2F;bin&#x2F;bash (举个例子)</p><p>3.进入</p><p>docker exec -it c1 &#x2F;bin&#x2F;bash</p><p>4.启动</p><p>docker start c1</p><p>5.停止</p><p>docker stop c1</p><p>6.删除</p><p>docker rm c1</p><p>docker rm ‘docker ps -aq’(删除所有容器，启动的容器不能删除)</p><p>7.查看容器信息</p><p>docker inspect c1</p><h3 id="docker-容器的数据卷"><a href="#docker-容器的数据卷" class="headerlink" title="docker 容器的数据卷"></a>docker 容器的数据卷</h3><p>数据卷是宿主机中的一个目录或文件</p><p>当容器目录和数据卷目录绑定之后，对方的修改会立即同步</p><p>一个数据卷可以被多个容器同时挂载</p><p>一个容器也可以被挂载多个数据卷</p><h4 id="配置数据卷"><a href="#配置数据卷" class="headerlink" title="配置数据卷"></a>配置数据卷</h4><p>docker run …-v宿主机目录（文件）：容器内目录（文件）…</p><p>注意事项：</p><p>1.目录必须是绝对路径</p><p>2.如果目录不存在，会自动创建</p><p>3.可以挂载多个数据卷</p><h3 id="docker-应用部署"><a href="#docker-应用部署" class="headerlink" title="docker 应用部署"></a>docker 应用部署</h3><h5 id="1-MySQL部署-例子"><a href="#1-MySQL部署-例子" class="headerlink" title="1.MySQL部署(例子)"></a>1.MySQL部署(例子)</h5><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714193732619.png" alt="image-20240714193732619"></p><p>1.搜索mysql镜像</p><p>docker search mysql</p><p>2.拉取mysql镜像</p><p>docker pull mysql :5.6</p><p>3.创建容器，设置端口映射，目录映射</p><p>mkdir ~&#x2F;mysql</p><p>cd ~&#x2F;mysql</p><p>开始正式创建</p><p>docker run -id\</p><p>-p 3306：3306\</p><p>–name&#x3D;c_mysql\</p><p>-v $PWD&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d\</p><p>-v $PWD&#x2F;logs:&#x2F;logs\</p><p>-v $PWD&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql\</p><p>-e MYSQL_ROOT_PASSWORD&#x3D;123456</p><p>mysql:5.6</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE_20240714_195315.png" alt="屏幕截图_20240714_195315"></p><h4 id="2-部署Tomcat"><a href="#2-部署Tomcat" class="headerlink" title="2.部署Tomcat"></a>2.部署Tomcat</h4><p>不想敲了，截图了</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714195604459.png" alt="image-20240714195604459"></p><h3 id="dockerfile（不咋会写或者偷懒的话让AI写吧）"><a href="#dockerfile（不咋会写或者偷懒的话让AI写吧）" class="headerlink" title="dockerfile（不咋会写或者偷懒的话让AI写吧）"></a>dockerfile（不咋会写或者偷懒的话让AI写吧）</h3><p>docker镜像原理</p><p>docker镜像是由特殊的文件系统叠加而成</p><p>最底端是bootfs,并使用宿主机的bootfs</p><p>第二层是root文件系统rootfs,又称base image</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240714200751837.png" alt="image-20240714200751837"></p><h4 id="镜像制作"><a href="#镜像制作" class="headerlink" title="镜像制作"></a>镜像制作</h4><p>1.容器转变为镜像</p><p>docker commit 容器ID 镜像名称：版本号</p><p>docker save -o压缩文件名称 镜像名称：版本号</p><p>docker load -i 压缩文件名称</p><p>2.dockerfile概念</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240715114713583.png" alt="image-20240715114713583"></p><p>dockerfile关键字</p><p><img src="https://raw.githubusercontent.com/Aalok-zz/Mypic/main/img/image-20240715115632513.png" alt="image-20240715115632513"></p><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker compose"></a>docker compose</h3><p><a href="https://www.runoob.com/docker/docker-compose.html">Docker Compose | 菜鸟教程 (runoob.com)</a>  这个讲的蛮好的</p><h3 id="Docker部署web环境"><a href="#Docker部署web环境" class="headerlink" title="Docker部署web环境"></a>Docker部署web环境</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>blog 心得</title>
    <link href="/2024/07/11/text/"/>
    <url>/2024/07/11/text/</url>
    
    <content type="html"><![CDATA[<p>欢迎来我的blog做客~<br>blog刚刚才搭载优化好，还没有文章QAQ…后续我会更新的。<br>把我的所学知识记录在上面并且分享给有需要的人！<br>之前在服务器上搭的，后续不想再买阿里了，就本地搭个博客吧。<br>网上hexo框架在github上搭博客，教程蛮多的，可以搜着看看<br>搭的过程中坎坎坷坷，也是自己知识的欠缺，后面猛补QAQ</p><p>1.安装git和 node.js时候目录文件夹纯英文呀<br>2.输入指令的时候会经常出现权限不足的情况，命令提示符管理员身份打开，CD进博客的那个目录再继续执行指令<br>3多用搜索引擎，多请教<br>4为知识付费，没什么不好的  ORZ</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
